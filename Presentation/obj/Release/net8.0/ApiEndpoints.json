[
  {
    "ContainingType": "Presentation.Controllers.ApartmentsController",
    "Method": "GetAllApartmentsAsync",
    "RelativePath": "api/Apartments/apartments",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "Filters",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "Sorts",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "Page",
        "Type": "System.Nullable\u00601[[System.Int32, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "IsRequired": false
      },
      {
        "Name": "PageSize",
        "Type": "System.Nullable\u00601[[System.Int32, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Presentation.Controllers.ApartmentsController",
    "Method": "CreateNewApartment",
    "RelativePath": "api/Apartments/apartments",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "apartment",
        "Type": "BusinessLogic.DTOs.ApartmentDtos.Requests.ApartmentRequestDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Presentation.Controllers.ApartmentsController",
    "Method": "GetApartmentById",
    "RelativePath": "api/Apartments/apartments/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Presentation.Controllers.ApartmentsController",
    "Method": "UpdateApartment",
    "RelativePath": "api/Apartments/apartments/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      },
      {
        "Name": "request",
        "Type": "BusinessLogic.DTOs.ApartmentDtos.Requests.ApartmentInformationToUpdateRequestDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Presentation.Controllers.ApartmentsController",
    "Method": "DeleteApartment",
    "RelativePath": "api/Apartments/apartments/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Presentation.Controllers.ApartmentsController",
    "Method": "UploadImagesAsync",
    "RelativePath": "api/Apartments/apartments/{id}/images",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      },
      {
        "Name": "images",
        "Type": "System.Collections.Generic.List\u00601[[Microsoft.AspNetCore.Http.IFormFile, Microsoft.AspNetCore.Http.Features, Version=8.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60]]",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Presentation.Controllers.ApartmentsController",
    "Method": "GetApartmentImages",
    "RelativePath": "api/Apartments/apartments/{id}/images",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Presentation.Controllers.ApartmentsController",
    "Method": "GetApartmentsByUserId",
    "RelativePath": "api/Apartments/apartments/user/{userId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": false
      },
      {
        "Name": "userId",
        "Type": "",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Presentation.Controllers.AuthenticationController",
    "Method": "ConfirmEmail",
    "RelativePath": "api/Authentication/confirm-email",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "token",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "email",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Presentation.Controllers.AuthenticationController",
    "Method": "ForgotPassword",
    "RelativePath": "api/Authentication/forgot-password",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "BusinessLogic.DTOs.AuthenticationDtos.Requests.ForgetPasswordRequestDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Presentation.Controllers.AuthenticationController",
    "Method": "Login",
    "RelativePath": "api/Authentication/login",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "BusinessLogic.Contracts.Identity.UserLoginRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Presentation.Controllers.AuthenticationController",
    "Method": "Register",
    "RelativePath": "api/Authentication/registration",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "BusinessLogic.Contracts.Identity.UserRegistrationRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Presentation.Controllers.AuthenticationController",
    "Method": "ResetForgottenPassword",
    "RelativePath": "api/Authentication/reset-forgotten-password",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "token",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "email",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Presentation.Controllers.AuthenticationController",
    "Method": "ResetForgottenPassword",
    "RelativePath": "api/Authentication/reset-forgotten-password",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "resetPassword",
        "Type": "BusinessLogic.Contracts.Identity.ResetPassword",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Presentation.Controllers.CitiesController",
    "Method": "GetAllCitiesAsync",
    "RelativePath": "api/Cities/cities",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "Filters",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "Sorts",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "Page",
        "Type": "System.Nullable\u00601[[System.Int32, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "IsRequired": false
      },
      {
        "Name": "PageSize",
        "Type": "System.Nullable\u00601[[System.Int32, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Presentation.Controllers.CitiesController",
    "Method": "CreateCityAsync",
    "RelativePath": "api/Cities/cities",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "BusinessLogic.DTOs.CityDtos.Requests.CityRequestDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Presentation.Controllers.CitiesController",
    "Method": "GetCityByIdAsync",
    "RelativePath": "api/Cities/cities/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Presentation.Controllers.CitiesController",
    "Method": "UpdateCityAsync",
    "RelativePath": "api/Cities/cities/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      },
      {
        "Name": "request",
        "Type": "BusinessLogic.DTOs.CityDtos.Requests.CityRequestDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Presentation.Controllers.FavouritesController",
    "Method": "AddToFavouritesAsync",
    "RelativePath": "api/Favourites/AddTofavourites",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userId",
        "Type": "System.Guid",
        "IsRequired": false
      },
      {
        "Name": "apartmentId",
        "Type": "System.Guid",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Presentation.Controllers.FavouritesController",
    "Method": "GetFavouriteByIdAsync",
    "RelativePath": "api/Favourites/favourites",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userId",
        "Type": "System.Guid",
        "IsRequired": false
      },
      {
        "Name": "apartmentId",
        "Type": "System.Guid",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Presentation.Controllers.FavouritesController",
    "Method": "GetFavouritesByUserId",
    "RelativePath": "api/Favourites/favourites/user/{userId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userId",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Presentation.Controllers.FavouritesController",
    "Method": "RemoveFromFavouritesAsync",
    "RelativePath": "api/Favourites/Removefavourites",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userId",
        "Type": "System.Guid",
        "IsRequired": false
      },
      {
        "Name": "apartmentId",
        "Type": "System.Guid",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Presentation.Controllers.SuspensionsController",
    "Method": "SuspendUserAsync",
    "RelativePath": "api/Suspensions/suspensions",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "BusinessLogic.DTOs.UserDtos.Requests.SuspendUserRequestDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Presentation.Controllers.SuspensionsController",
    "Method": "GetAllSuspendedUsersAsync",
    "RelativePath": "api/Suspensions/suspensions",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "sieveModel",
        "Type": "Sieve.Models.SieveModel",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Presentation.Controllers.SuspensionsController",
    "Method": "UnSuspendUserAsync",
    "RelativePath": "api/Suspensions/suspensions/{id}",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userId",
        "Type": "System.Guid",
        "IsRequired": false
      },
      {
        "Name": "id",
        "Type": "",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Presentation.Controllers.SuspensionsController",
    "Method": "GetSuspendedUserByIdAsync",
    "RelativePath": "api/Suspensions/suspensions/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userId",
        "Type": "System.Guid",
        "IsRequired": false
      },
      {
        "Name": "id",
        "Type": "",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Presentation.Controllers.SuspensionsController",
    "Method": "GetAllSuspensionReasons",
    "RelativePath": "api/Suspensions/suspensions/reasons",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Presentation.Controllers.UniversitiesController",
    "Method": "GetAllUniversityAsync",
    "RelativePath": "api/Universities/universities",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "Filters",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "Sorts",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "Page",
        "Type": "System.Nullable\u00601[[System.Int32, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "IsRequired": false
      },
      {
        "Name": "PageSize",
        "Type": "System.Nullable\u00601[[System.Int32, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Presentation.Controllers.UniversitiesController",
    "Method": "CreateUniversityAsync",
    "RelativePath": "api/Universities/universities/{cityId}",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "cityId",
        "Type": "System.Guid",
        "IsRequired": true
      },
      {
        "Name": "request",
        "Type": "BusinessLogic.DTOs.UniversityDtos.Requests.UniversityRequestDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Presentation.Controllers.UniversitiesController",
    "Method": "UpdateUniversityAsync",
    "RelativePath": "api/Universities/universities/{cityId}/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "cityId",
        "Type": "System.Guid",
        "IsRequired": true
      },
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      },
      {
        "Name": "request",
        "Type": "BusinessLogic.DTOs.UniversityDtos.Requests.UniversityRequestDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Presentation.Controllers.UniversitiesController",
    "Method": "DeleteUniversityAsync",
    "RelativePath": "api/Universities/universities/{cityId}/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "cityId",
        "Type": "System.Guid",
        "IsRequired": true
      },
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Presentation.Controllers.UniversitiesController",
    "Method": "GetUniversityByIdAsync",
    "RelativePath": "api/Universities/universities/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Presentation.Controllers.UniversitiesController",
    "Method": "GetUniversitiesByCityIdAsync",
    "RelativePath": "api/Universities/universities/city/{cityId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "cityId",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Presentation.Controllers.UserFollowingController",
    "Method": "FollowUserAsync",
    "RelativePath": "api/UserFollowing/{userId}",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userId",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Presentation.Controllers.UserFollowingController",
    "Method": "UnfollowUserAsync",
    "RelativePath": "api/UserFollowing/{userId}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userId",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Presentation.Controllers.UserFollowingController",
    "Method": "GetFollowersAsync",
    "RelativePath": "api/UserFollowing/followers/{userId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userId",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Presentation.Controllers.UserFollowingController",
    "Method": "GetFollowingAsync",
    "RelativePath": "api/UserFollowing/following/{userId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userId",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Presentation.Controllers.UsersController",
    "Method": "GetAllUsersAsync",
    "RelativePath": "api/Users/users",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "Filters",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "Sorts",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "Page",
        "Type": "System.Nullable\u00601[[System.Int32, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "IsRequired": false
      },
      {
        "Name": "PageSize",
        "Type": "System.Nullable\u00601[[System.Int32, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Presentation.Controllers.UsersController",
    "Method": "UpdateUserAsync",
    "RelativePath": "api/Users/users",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "updateUserDto",
        "Type": "BusinessLogic.DTOs.UserDtos.Requests.UpdateUserRequestDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Presentation.Controllers.UsersController",
    "Method": "GetUserByIdAsync",
    "RelativePath": "api/Users/users/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userId",
        "Type": "System.Guid",
        "IsRequired": false
      },
      {
        "Name": "id",
        "Type": "",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Presentation.Controllers.UsersController",
    "Method": "ChangePasswordAsync",
    "RelativePath": "api/Users/users/change-password",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "changePasswordDto",
        "Type": "BusinessLogic.DTOs.UserDtos.Requests.ChangePasswordRequestDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Presentation.Controllers.UsersController",
    "Method": "GetUserByEmailAsync",
    "RelativePath": "api/Users/users/email/{email}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "email",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Presentation.Controllers.UsersController",
    "Method": "UpdateProfileImageAsync",
    "RelativePath": "api/Users/users/profile-image",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "file",
        "Type": "Microsoft.AspNetCore.Http.IFormFile",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  }
]